<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="260" passed="230" failed="30" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-06T18:35:13 IST" name="VitalGuardAutomationSuite" finished-at="2025-07-06T18:36:45 IST" duration-ms="91570">
    <groups>
    </groups>
    <test started-at="2025-07-06T18:35:13 IST" name="ChromeTest" finished-at="2025-07-06T18:36:39 IST" duration-ms="85281">
      <class name="com.vitalGuard.tests.TestRunner">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:13 IST" name="setup" finished-at="2025-07-06T18:35:19 IST" duration-ms="6098" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="valNavbarlink(java.lang.String,java.lang.String)[pri:0, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:19 IST" name="valNavbarlink" data-provider="linkData" finished-at="2025-07-06T18:35:20 IST" duration-ms="178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[container]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valNavbarlink -->
        <test-method signature="valNavbarlink(java.lang.String,java.lang.String)[pri:0, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:20 IST" name="valNavbarlink" data-provider="linkData" finished-at="2025-07-06T18:35:20 IST" duration-ms="165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pulseRate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valNavbarlink -->
        <test-method signature="valNavbarlink(java.lang.String,java.lang.String)[pri:0, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:20 IST" name="valNavbarlink" data-provider="linkData" finished-at="2025-07-06T18:35:20 IST" duration-ms="147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bloodPressure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valNavbarlink -->
        <test-method signature="valNavbarlink(java.lang.String,java.lang.String)[pri:0, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:20 IST" name="valNavbarlink" data-provider="linkData" finished-at="2025-07-06T18:35:20 IST" duration-ms="156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ageFactor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valNavbarlink -->
        <test-method signature="valNavbarlink(java.lang.String,java.lang.String)[pri:0, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:20 IST" name="valNavbarlink" data-provider="linkData" finished-at="2025-07-06T18:35:20 IST" duration-ms="148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valNavbarlink -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:22 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:24 IST" duration-ms="1628" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:24 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:24 IST" duration-ms="740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:24 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:25 IST" duration-ms="718" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[15.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[95.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:25 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:26 IST" duration-ms="611" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[25.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your pulse rate is low. This could be normal for athletes, but consider consulting a doctor if you experience dizziness or fatigue.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:26 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:26 IST" duration-ms="691" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[98.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:26 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:27 IST" duration-ms="723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[35.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[118/76]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[99.4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:27 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:28 IST" duration-ms="690" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[40.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:28 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:28 IST" duration-ms="682" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[45.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[92.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[97.4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your pulse rate is elevated. Try relaxation techniques and consider reducing caffeine intake.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:28 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:29 IST" duration-ms="715" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[50.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[96.7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your blood pressure is higher than optimal. Consider reducing sodium intake, maintaining a healthy weight, and regular exercise.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:29 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:30 IST" duration-ms="732" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[78.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[140/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your blood pressure is higher than optimal. Consider reducing sodium intake, maintaining a healthy weight, and regular exercise.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:30 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:31 IST" duration-ms="840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[65.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[98.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:31 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:31 IST" duration-ms="760" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[65.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[72.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[96.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:31 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:32 IST" duration-ms="772" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[68.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:32 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:33 IST" duration-ms="848" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[75.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:33 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:34 IST" duration-ms="730" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[80.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[58.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[138/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[83.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:34 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:34 IST" duration-ms="657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:34 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:35 IST" duration-ms="716" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[118/78]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:35 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:36 IST" duration-ms="632" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[95.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[66.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[122/82]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:36 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:37 IST" duration-ms="676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[93.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:37 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:37 IST" duration-ms="746" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[105.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[91.7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:37 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:38 IST" duration-ms="735" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[110.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[58.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[80.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:38 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:39 IST" duration-ms="722" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[115.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[138/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[80.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:39 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:39 IST" duration-ms="700" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[52.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[140/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[79.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:40 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:40 IST" duration-ms="766" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:40 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:41 IST" duration-ms="756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:41 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:42 IST" duration-ms="742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[15.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[95.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:42 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:43 IST" duration-ms="822" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[25.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your pulse rate is low. This could be normal for athletes, but consider consulting a doctor if you experience dizziness or fatigue.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:43 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:44 IST" duration-ms="850" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[98.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:44 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:44 IST" duration-ms="740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[35.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[118/76]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[99.4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:44 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:45 IST" duration-ms="728" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[40.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:45 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:46 IST" duration-ms="681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[45.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[92.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[97.4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your pulse rate is elevated. Try relaxation techniques and consider reducing caffeine intake.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:46 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:46 IST" duration-ms="691" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[50.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[96.7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your blood pressure is higher than optimal. Consider reducing sodium intake, maintaining a healthy weight, and regular exercise.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:46 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:47 IST" duration-ms="633" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[78.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[140/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your blood pressure is higher than optimal. Consider reducing sodium intake, maintaining a healthy weight, and regular exercise.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:47 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:48 IST" duration-ms="674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[65.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[98.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:48 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:48 IST" duration-ms="729" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[65.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[72.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[96.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:48 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:49 IST" duration-ms="696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[68.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:49 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:50 IST" duration-ms="742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[75.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:50 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:51 IST" duration-ms="680" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[80.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[58.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[138/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[83.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:51 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:51 IST" duration-ms="735" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:51 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:52 IST" duration-ms="676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[118/78]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:52 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:53 IST" duration-ms="642" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[95.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[66.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[122/82]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:53 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:53 IST" duration-ms="612" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[93.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:53 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:54 IST" duration-ms="707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[105.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[91.7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:54 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:55 IST" duration-ms="746" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[110.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[58.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[80.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:55 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:55 IST" duration-ms="710" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[115.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[138/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[80.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:55 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:56 IST" duration-ms="733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[52.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[140/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[79.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateInvalidAgeInput(java.lang.String,java.lang.String)[pri:3, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:56 IST" name="validateInvalidAgeInput" data-provider="invalidAgeData" finished-at="2025-07-06T18:35:56 IST" duration-ms="190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Age must be between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeInput -->
        <test-method signature="validateInvalidAgeInput(java.lang.String,java.lang.String)[pri:3, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:56 IST" name="validateInvalidAgeInput" data-provider="invalidAgeData" finished-at="2025-07-06T18:35:56 IST" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[121]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Age must be between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeInput -->
        <test-method signature="validateInvalidAgeInput(java.lang.String,java.lang.String)[pri:3, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:56 IST" name="validateInvalidAgeInput" data-provider="invalidAgeData" finished-at="2025-07-06T18:35:57 IST" duration-ms="145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Age must be between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeInput -->
        <test-method signature="validateInvalidAgeInput(java.lang.String,java.lang.String)[pri:3, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:57 IST" name="validateInvalidAgeInput" data-provider="invalidAgeData" finished-at="2025-07-06T18:35:57 IST" duration-ms="179" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Age must be an integer.]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for age input: 12.5 expected [Age must be an integer.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for age input: 12.5 expected [Age must be an integer.] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidAgeInput(TestRunner.java:255)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeInput -->
        <test-method signature="validateInvalidAgeInput(java.lang.String,java.lang.String)[pri:3, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:57 IST" name="validateInvalidAgeInput" data-provider="invalidAgeData" finished-at="2025-07-06T18:35:57 IST" duration-ms="161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Age must be between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:57 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:35:58 IST" duration-ms="162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[39]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate should be between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:58 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:35:58 IST" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[181]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate should be between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:58 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:35:58 IST" duration-ms="149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate should be between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:58 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:35:58 IST" duration-ms="163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate must be a number.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:58 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:35:58 IST" duration-ms="185" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate must be an integer.]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for pulse input: 100.5 expected [Pulse rate must be an integer.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for pulse input: 100.5 expected [Pulse rate must be an integer.] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidPulseInput(TestRunner.java:264)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:58 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:35:59 IST" duration-ms="147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate must be a number.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:59 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:35:59 IST" duration-ms="193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@#]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate must be a number.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:59 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:35:59 IST" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate should be between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:59 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:35:59 IST" duration-ms="140" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for BP input:  expected [Use format: systolic/diastolic (e.g., 120/80)] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for BP input:  expected [Use format: systolic/diastolic (e.g., 120/80)] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidBPInput(TestRunner.java:274)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:35:59 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:00 IST" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:00 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:00 IST" duration-ms="185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:00 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:00 IST" duration-ms="159" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:00 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:00 IST" duration-ms="198" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc/xyz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:00 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:00 IST" duration-ms="116" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[150/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Systolic must be between 90 and 140]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for BP input: 150/80 expected [Systolic must be between 90 and 140] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for BP input: 150/80 expected [Systolic must be between 90 and 140] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidBPInput(TestRunner.java:274)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:01 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:01 IST" duration-ms="167" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[85/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Systolic must be between 90 and 140]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for BP input: 85/80 expected [Systolic must be between 90 and 140] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for BP input: 85/80 expected [Systolic must be between 90 and 140] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidBPInput(TestRunner.java:274)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:01 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:01 IST" duration-ms="164" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/95]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Diastolic must be between 60 and 90]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for BP input: 120/95 expected [Diastolic must be between 60 and 90] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for BP input: 120/95 expected [Diastolic must be between 60 and 90] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidBPInput(TestRunner.java:274)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:01 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:02 IST" duration-ms="161" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Diastolic must be between 60 and 90]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for BP input: 120/55 expected [Diastolic must be between 60 and 90] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for BP input: 120/55 expected [Diastolic must be between 60 and 90] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidBPInput(TestRunner.java:274)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:02 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:02 IST" duration-ms="160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120.5/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:02 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:02 IST" duration-ms="146" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/80.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:02 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:02 IST" duration-ms="116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120 80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:02 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:03 IST" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120-80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:03 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:03 IST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@120/@80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:03 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:03 IST" duration-ms="166" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[999/999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Systolic must be between 90 and 140]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for BP input: 999/999 expected [Systolic must be between 90 and 140] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for BP input: 999/999 expected [Systolic must be between 90 and 140] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidBPInput(TestRunner.java:274)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:03 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:04 IST" duration-ms="595" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:04 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:05 IST" duration-ms="516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:05 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:05 IST" duration-ms="583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[15.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[95.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:05 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:06 IST" duration-ms="622" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[25.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your pulse rate is low. This could be normal for athletes, but consider consulting a doctor if you experience dizziness or fatigue.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:06 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:06 IST" duration-ms="568" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[98.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:06 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:07 IST" duration-ms="589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[35.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[118/76]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[99.4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:07 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:08 IST" duration-ms="679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[40.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:08 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:08 IST" duration-ms="609" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[45.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[92.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[97.4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your pulse rate is elevated. Try relaxation techniques and consider reducing caffeine intake.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:08 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:09 IST" duration-ms="649" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[50.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[96.7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your blood pressure is higher than optimal. Consider reducing sodium intake, maintaining a healthy weight, and regular exercise.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:09 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:09 IST" duration-ms="624" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[78.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[140/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your blood pressure is higher than optimal. Consider reducing sodium intake, maintaining a healthy weight, and regular exercise.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:09 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:10 IST" duration-ms="642" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[65.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[98.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:10 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:11 IST" duration-ms="616" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[65.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[72.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[96.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:11 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:11 IST" duration-ms="627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[68.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:11 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:12 IST" duration-ms="645" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[75.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:12 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:13 IST" duration-ms="615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[80.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[58.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[138/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[83.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:13 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:13 IST" duration-ms="606" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:13 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:14 IST" duration-ms="644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[118/78]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:14 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:14 IST" duration-ms="645" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[95.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[66.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[122/82]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:14 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:15 IST" duration-ms="627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[93.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:15 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:16 IST" duration-ms="617" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[105.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[91.7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:16 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:16 IST" duration-ms="683" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[110.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[58.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[80.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:16 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:17 IST" duration-ms="697" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[115.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[138/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[80.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:17 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:18 IST" duration-ms="711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[52.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[140/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[79.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateInvalidAgeAlert(java.lang.String,java.lang.String)[pri:7, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:18 IST" name="validateInvalidAgeAlert" data-provider="invalidAgeAlertData" finished-at="2025-07-06T18:36:18 IST" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid age between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeAlert -->
        <test-method signature="validateInvalidAgeAlert(java.lang.String,java.lang.String)[pri:7, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:18 IST" name="validateInvalidAgeAlert" data-provider="invalidAgeAlertData" finished-at="2025-07-06T18:36:18 IST" duration-ms="306" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[121]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid age between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeAlert -->
        <test-method signature="validateInvalidAgeAlert(java.lang.String,java.lang.String)[pri:7, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:18 IST" name="validateInvalidAgeAlert" data-provider="invalidAgeAlertData" finished-at="2025-07-06T18:36:19 IST" duration-ms="215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid age between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeAlert -->
        <test-method signature="validateInvalidAgeAlert(java.lang.String,java.lang.String)[pri:7, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:19 IST" name="validateInvalidAgeAlert" data-provider="invalidAgeAlertData" finished-at="2025-07-06T18:36:19 IST" duration-ms="292" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid age between 1 and 120.]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for age input: 12.5 expected [Please enter a valid age between 1 and 120.] but found [Please enter a valid pulse rate between 40 and 180 bpm.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for age input: 12.5 expected [Please enter a valid age between 1 and 120.] but found [Please enter a valid pulse rate between 40 and 180 bpm.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidAgeAlert(TestRunner.java:355)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeAlert -->
        <test-method signature="validateInvalidAgeAlert(java.lang.String,java.lang.String)[pri:7, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:19 IST" name="validateInvalidAgeAlert" data-provider="invalidAgeAlertData" finished-at="2025-07-06T18:36:20 IST" duration-ms="264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid age between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:20 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:20 IST" duration-ms="446" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[39]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:20 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:20 IST" duration-ms="384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[181]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:20 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:21 IST" duration-ms="423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:21 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:21 IST" duration-ms="436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:21 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:22 IST" duration-ms="414" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for age input: 100.5 expected [Please enter a valid pulse rate between 40 and 180 bpm.] but found [Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for age input: 100.5 expected [Please enter a valid pulse rate between 40 and 180 bpm.] but found [Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidPulseAlert(TestRunner.java:368)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:22 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:22 IST" duration-ms="399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:22 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:23 IST" duration-ms="431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@#]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:23 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:23 IST" duration-ms="408" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:23 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:24 IST" duration-ms="567" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:24 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:24 IST" duration-ms="570" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:24 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:25 IST" duration-ms="642" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:25 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:26 IST" duration-ms="766" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:26 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:26 IST" duration-ms="597" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc/xyz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:26 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:27 IST" duration-ms="744" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[150/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at com.vitalGuard.tests.TestRunner.validateInvalidBPAlert(TestRunner.java:387)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:28 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:28 IST" duration-ms="630" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[85/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at com.vitalGuard.tests.TestRunner.validateInvalidBPAlert(TestRunner.java:387)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:29 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:29 IST" duration-ms="549" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/95]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at com.vitalGuard.tests.TestRunner.validateInvalidBPAlert(TestRunner.java:387)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:30 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:30 IST" duration-ms="663" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at com.vitalGuard.tests.TestRunner.validateInvalidBPAlert(TestRunner.java:387)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:31 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:31 IST" duration-ms="615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120.5/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:31 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:32 IST" duration-ms="638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/80.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:32 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:33 IST" duration-ms="620" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120 80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:33 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:33 IST" duration-ms="633" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120-80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:33 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:34 IST" duration-ms="666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@120/@80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:34 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:35 IST" duration-ms="714" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[999/999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at com.vitalGuard.tests.TestRunner.validateInvalidBPAlert(TestRunner.java:387)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.vitalGuard.tests.TestRunner@3c3d9b6b]" started-at="2025-07-06T18:36:35 IST" name="tearDown" finished-at="2025-07-06T18:36:39 IST" duration-ms="3709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.vitalGuard.tests.TestRunner -->
    </test> <!-- ChromeTest -->
    <test started-at="2025-07-06T18:35:13 IST" name="EdgeTest" finished-at="2025-07-06T18:36:45 IST" duration-ms="91569">
      <class name="com.vitalGuard.tests.TestRunner">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:13 IST" name="setup" finished-at="2025-07-06T18:35:19 IST" duration-ms="5949" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="valNavbarlink(java.lang.String,java.lang.String)[pri:0, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:19 IST" name="valNavbarlink" data-provider="linkData" finished-at="2025-07-06T18:35:20 IST" duration-ms="263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[container]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valNavbarlink -->
        <test-method signature="valNavbarlink(java.lang.String,java.lang.String)[pri:0, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:20 IST" name="valNavbarlink" data-provider="linkData" finished-at="2025-07-06T18:35:20 IST" duration-ms="190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pulseRate]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valNavbarlink -->
        <test-method signature="valNavbarlink(java.lang.String,java.lang.String)[pri:0, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:20 IST" name="valNavbarlink" data-provider="linkData" finished-at="2025-07-06T18:35:20 IST" duration-ms="155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bloodPressure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valNavbarlink -->
        <test-method signature="valNavbarlink(java.lang.String,java.lang.String)[pri:0, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:20 IST" name="valNavbarlink" data-provider="linkData" finished-at="2025-07-06T18:35:20 IST" duration-ms="168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ageFactor]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valNavbarlink -->
        <test-method signature="valNavbarlink(java.lang.String,java.lang.String)[pri:0, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:20 IST" name="valNavbarlink" data-provider="linkData" finished-at="2025-07-06T18:35:20 IST" duration-ms="149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foot]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valNavbarlink -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:22 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:24 IST" duration-ms="1616" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:24 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:25 IST" duration-ms="1001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:25 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:26 IST" duration-ms="1077" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[15.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[95.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:26 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:26 IST" duration-ms="861" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[25.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your pulse rate is low. This could be normal for athletes, but consider consulting a doctor if you experience dizziness or fatigue.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:26 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:27 IST" duration-ms="843" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[98.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:27 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:28 IST" duration-ms="708" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[35.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[118/76]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[99.4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:28 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:29 IST" duration-ms="802" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[40.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:29 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:30 IST" duration-ms="769" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[45.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[92.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[97.4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your pulse rate is elevated. Try relaxation techniques and consider reducing caffeine intake.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:30 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:31 IST" duration-ms="929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[50.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[96.7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your blood pressure is higher than optimal. Consider reducing sodium intake, maintaining a healthy weight, and regular exercise.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:31 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:32 IST" duration-ms="1431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[78.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[140/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your blood pressure is higher than optimal. Consider reducing sodium intake, maintaining a healthy weight, and regular exercise.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:32 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:33 IST" duration-ms="1001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[65.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[98.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:33 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:34 IST" duration-ms="874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[65.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[72.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[96.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:34 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:35 IST" duration-ms="659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[68.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:35 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:35 IST" duration-ms="744" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[75.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:35 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:36 IST" duration-ms="696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[80.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[58.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[138/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[83.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:36 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:37 IST" duration-ms="779" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:37 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:38 IST" duration-ms="756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[118/78]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:38 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:38 IST" duration-ms="854" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[95.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[66.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[122/82]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:38 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:39 IST" duration-ms="754" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[93.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:39 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:40 IST" duration-ms="808" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[105.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[91.7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:40 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:41 IST" duration-ms="753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[110.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[58.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[80.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:41 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:41 IST" duration-ms="738" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[115.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[138/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[80.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuardCalculate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:41 IST" name="validateVitalGuardCalculate" data-provider="testData" finished-at="2025-07-06T18:35:42 IST" duration-ms="795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[52.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[140/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[79.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuardCalculate -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:42 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:43 IST" duration-ms="840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:43 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:44 IST" duration-ms="895" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:44 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:45 IST" duration-ms="824" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[15.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[95.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:45 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:46 IST" duration-ms="797" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[25.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your pulse rate is low. This could be normal for athletes, but consider consulting a doctor if you experience dizziness or fatigue.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:46 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:46 IST" duration-ms="697" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[98.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:46 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:47 IST" duration-ms="699" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[35.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[118/76]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[99.4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:47 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:48 IST" duration-ms="730" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[40.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:48 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:49 IST" duration-ms="754" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[45.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[92.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[97.4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your pulse rate is elevated. Try relaxation techniques and consider reducing caffeine intake.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:49 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:49 IST" duration-ms="778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[50.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[96.7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your blood pressure is higher than optimal. Consider reducing sodium intake, maintaining a healthy weight, and regular exercise.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:49 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:50 IST" duration-ms="793" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[78.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[140/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your blood pressure is higher than optimal. Consider reducing sodium intake, maintaining a healthy weight, and regular exercise.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:50 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:51 IST" duration-ms="750" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[65.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[98.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:51 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:52 IST" duration-ms="742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[65.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[72.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[96.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:52 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:52 IST" duration-ms="729" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[68.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:52 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:53 IST" duration-ms="670" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[75.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:53 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:54 IST" duration-ms="704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[80.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[58.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[138/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[83.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:54 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:55 IST" duration-ms="803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:55 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:55 IST" duration-ms="695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[118/78]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:55 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:56 IST" duration-ms="728" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[95.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[66.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[122/82]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:56 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:57 IST" duration-ms="738" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[93.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:57 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:57 IST" duration-ms="640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[105.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[91.7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:57 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:58 IST" duration-ms="643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[110.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[58.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[80.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:58 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:59 IST" duration-ms="650" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[115.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[138/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[80.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateVitalGuard(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:59 IST" name="validateVitalGuard" data-provider="testData" finished-at="2025-07-06T18:35:59 IST" duration-ms="655" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[52.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[140/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[79.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard -->
        <test-method signature="validateInvalidAgeInput(java.lang.String,java.lang.String)[pri:3, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:35:59 IST" name="validateInvalidAgeInput" data-provider="invalidAgeData" finished-at="2025-07-06T18:36:00 IST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Age must be between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeInput -->
        <test-method signature="validateInvalidAgeInput(java.lang.String,java.lang.String)[pri:3, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:00 IST" name="validateInvalidAgeInput" data-provider="invalidAgeData" finished-at="2025-07-06T18:36:00 IST" duration-ms="139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[121]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Age must be between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeInput -->
        <test-method signature="validateInvalidAgeInput(java.lang.String,java.lang.String)[pri:3, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:00 IST" name="validateInvalidAgeInput" data-provider="invalidAgeData" finished-at="2025-07-06T18:36:00 IST" duration-ms="144" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Age must be between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeInput -->
        <test-method signature="validateInvalidAgeInput(java.lang.String,java.lang.String)[pri:3, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:00 IST" name="validateInvalidAgeInput" data-provider="invalidAgeData" finished-at="2025-07-06T18:36:00 IST" duration-ms="140" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Age must be an integer.]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for age input: 12.5 expected [Age must be an integer.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for age input: 12.5 expected [Age must be an integer.] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidAgeInput(TestRunner.java:255)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeInput -->
        <test-method signature="validateInvalidAgeInput(java.lang.String,java.lang.String)[pri:3, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:00 IST" name="validateInvalidAgeInput" data-provider="invalidAgeData" finished-at="2025-07-06T18:36:01 IST" duration-ms="145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Age must be between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:01 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:36:01 IST" duration-ms="149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[39]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate should be between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:01 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:36:01 IST" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[181]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate should be between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:01 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:36:01 IST" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate should be between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:01 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:36:01 IST" duration-ms="143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate must be a number.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:01 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:36:01 IST" duration-ms="139" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate must be an integer.]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for pulse input: 100.5 expected [Pulse rate must be an integer.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for pulse input: 100.5 expected [Pulse rate must be an integer.] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidPulseInput(TestRunner.java:264)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:02 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:36:02 IST" duration-ms="149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate must be a number.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:02 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:36:02 IST" duration-ms="145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@#]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate must be a number.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidPulseInput(java.lang.String,java.lang.String)[pri:4, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:02 IST" name="validateInvalidPulseInput" data-provider="invalidPulseData" finished-at="2025-07-06T18:36:02 IST" duration-ms="122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pulse rate should be between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:02 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:02 IST" duration-ms="127" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for BP input:  expected [Use format: systolic/diastolic (e.g., 120/80)] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for BP input:  expected [Use format: systolic/diastolic (e.g., 120/80)] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidBPInput(TestRunner.java:274)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:03 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:03 IST" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:03 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:03 IST" duration-ms="200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:03 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:03 IST" duration-ms="190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:03 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:03 IST" duration-ms="156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc/xyz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:03 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:03 IST" duration-ms="122" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[150/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Systolic must be between 90 and 140]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for BP input: 150/80 expected [Systolic must be between 90 and 140] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for BP input: 150/80 expected [Systolic must be between 90 and 140] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidBPInput(TestRunner.java:274)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:04 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:04 IST" duration-ms="145" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[85/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Systolic must be between 90 and 140]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for BP input: 85/80 expected [Systolic must be between 90 and 140] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for BP input: 85/80 expected [Systolic must be between 90 and 140] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidBPInput(TestRunner.java:274)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:04 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:04 IST" duration-ms="131" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/95]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Diastolic must be between 60 and 90]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for BP input: 120/95 expected [Diastolic must be between 60 and 90] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for BP input: 120/95 expected [Diastolic must be between 60 and 90] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidBPInput(TestRunner.java:274)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:05 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:05 IST" duration-ms="174" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Diastolic must be between 60 and 90]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for BP input: 120/55 expected [Diastolic must be between 60 and 90] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for BP input: 120/55 expected [Diastolic must be between 60 and 90] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidBPInput(TestRunner.java:274)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:05 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:05 IST" duration-ms="219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120.5/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:05 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:06 IST" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/80.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:06 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:06 IST" duration-ms="165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120 80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:06 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:06 IST" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120-80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:06 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:06 IST" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@120/@80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Use format: systolic/diastolic (e.g., 120/80)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateInvalidBPInput(java.lang.String,java.lang.String)[pri:5, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:06 IST" name="validateInvalidBPInput" data-provider="invalidBPData" finished-at="2025-07-06T18:36:06 IST" duration-ms="166" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[999/999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Systolic must be between 90 and 140]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for BP input: 999/999 expected [Systolic must be between 90 and 140] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for BP input: 999/999 expected [Systolic must be between 90 and 140] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidBPInput(TestRunner.java:274)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPInput -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:07 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:07 IST" duration-ms="784" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:07 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:08 IST" duration-ms="771" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:08 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:09 IST" duration-ms="798" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[15.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[95.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For your age group, regular physical activity and balanced nutrition are essential for healthy development.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:09 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:10 IST" duration-ms="763" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[25.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your pulse rate is low. This could be normal for athletes, but consider consulting a doctor if you experience dizziness or fatigue.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:10 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:11 IST" duration-ms="743" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[98.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:11 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:11 IST" duration-ms="787" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[35.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[118/76]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[99.4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:11 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:12 IST" duration-ms="732" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[40.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:12 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:13 IST" duration-ms="709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[45.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[92.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[97.4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your pulse rate is elevated. Try relaxation techniques and consider reducing caffeine intake.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:13 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:14 IST" duration-ms="750" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[50.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[96.7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your blood pressure is higher than optimal. Consider reducing sodium intake, maintaining a healthy weight, and regular exercise.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:14 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:14 IST" duration-ms="745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[78.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[140/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Your blood pressure is higher than optimal. Consider reducing sodium intake, maintaining a healthy weight, and regular exercise.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:14 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:15 IST" duration-ms="717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[65.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[98.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[General recommendations:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:15 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:16 IST" duration-ms="778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[65.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[72.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[96.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:16 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:17 IST" duration-ms="788" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[68.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:17 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:17 IST" duration-ms="811" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[75.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:17 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:18 IST" duration-ms="811" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[80.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[58.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[138/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[83.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:18 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:19 IST" duration-ms="784" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[85.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[120/80]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[95.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:19 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:20 IST" duration-ms="698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[90.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[118/78]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:20 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:20 IST" duration-ms="782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[95.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[66.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[122/82]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[94.1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:20 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:21 IST" duration-ms="762" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[125/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[93.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:21 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:22 IST" duration-ms="756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[105.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[130/88]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[91.7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:22 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:23 IST" duration-ms="810" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[110.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[58.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[135/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[80.5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:23 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:24 IST" duration-ms="795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[115.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[138/85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[80.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateVitalGuard2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:6, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:24 IST" name="validateVitalGuard2" data-provider="testData" finished-at="2025-07-06T18:36:25 IST" duration-ms="1022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[52.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[140/90]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[79.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[For seniors, regular check-ups, staying active, and monitoring blood pressure are particularly important.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVitalGuard2 -->
        <test-method signature="validateInvalidAgeAlert(java.lang.String,java.lang.String)[pri:7, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:25 IST" name="validateInvalidAgeAlert" data-provider="invalidAgeAlertData" finished-at="2025-07-06T18:36:25 IST" duration-ms="266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid age between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeAlert -->
        <test-method signature="validateInvalidAgeAlert(java.lang.String,java.lang.String)[pri:7, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:25 IST" name="validateInvalidAgeAlert" data-provider="invalidAgeAlertData" finished-at="2025-07-06T18:36:25 IST" duration-ms="388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[121]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid age between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeAlert -->
        <test-method signature="validateInvalidAgeAlert(java.lang.String,java.lang.String)[pri:7, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:25 IST" name="validateInvalidAgeAlert" data-provider="invalidAgeAlertData" finished-at="2025-07-06T18:36:26 IST" duration-ms="268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid age between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeAlert -->
        <test-method signature="validateInvalidAgeAlert(java.lang.String,java.lang.String)[pri:7, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:26 IST" name="validateInvalidAgeAlert" data-provider="invalidAgeAlertData" finished-at="2025-07-06T18:36:26 IST" duration-ms="342" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid age between 1 and 120.]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for age input: 12.5 expected [Please enter a valid age between 1 and 120.] but found [Please enter a valid pulse rate between 40 and 180 bpm.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for age input: 12.5 expected [Please enter a valid age between 1 and 120.] but found [Please enter a valid pulse rate between 40 and 180 bpm.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidAgeAlert(TestRunner.java:355)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeAlert -->
        <test-method signature="validateInvalidAgeAlert(java.lang.String,java.lang.String)[pri:7, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:26 IST" name="validateInvalidAgeAlert" data-provider="invalidAgeAlertData" finished-at="2025-07-06T18:36:27 IST" duration-ms="303" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid age between 1 and 120.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidAgeAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:27 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:27 IST" duration-ms="472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[39]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:27 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:27 IST" duration-ms="435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[181]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:27 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:28 IST" duration-ms="415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:28 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:28 IST" duration-ms="452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:28 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:29 IST" duration-ms="412" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message mismatch for age input: 100.5 expected [Please enter a valid pulse rate between 40 and 180 bpm.] but found [Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message mismatch for age input: 100.5 expected [Please enter a valid pulse rate between 40 and 180 bpm.] but found [Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.vitalGuard.tests.TestRunner.validateInvalidPulseAlert(TestRunner.java:368)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:29 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:29 IST" duration-ms="393" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:29 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:30 IST" duration-ms="422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@#]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidPulseAlert(java.lang.String,java.lang.String)[pri:8, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:30 IST" name="validateInvalidPulseAlert" data-provider="invalidPulseAlertData" finished-at="2025-07-06T18:36:30 IST" duration-ms="478" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter a valid pulse rate between 40 and 180 bpm.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPulseAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:30 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:31 IST" duration-ms="595" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:31 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:32 IST" duration-ms="662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:32 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:32 IST" duration-ms="726" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:32 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:33 IST" duration-ms="674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:33 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:34 IST" duration-ms="708" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc/xyz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:34 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:35 IST" duration-ms="768" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[150/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at com.vitalGuard.tests.TestRunner.validateInvalidBPAlert(TestRunner.java:387)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:35 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:36 IST" duration-ms="706" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[85/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at com.vitalGuard.tests.TestRunner.validateInvalidBPAlert(TestRunner.java:387)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:36 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:36 IST" duration-ms="579" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/95]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at com.vitalGuard.tests.TestRunner.validateInvalidBPAlert(TestRunner.java:387)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:37 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:37 IST" duration-ms="526" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at com.vitalGuard.tests.TestRunner.validateInvalidBPAlert(TestRunner.java:387)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:38 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:38 IST" duration-ms="476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120.5/80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:38 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:39 IST" duration-ms="538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120/80.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:39 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:39 IST" duration-ms="615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120 80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:39 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:40 IST" duration-ms="545" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[120-80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:40 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:40 IST" duration-ms="451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@120/@80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method signature="validateInvalidBPAlert(java.lang.String,java.lang.String)[pri:9, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:40 IST" name="validateInvalidBPAlert" data-provider="invalidBPAlertData" finished-at="2025-07-06T18:36:41 IST" duration-ms="585" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[999/999]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please enter blood pressure in the format systolic/diastolic (e.g., 120/80).]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at com.vitalGuard.tests.TestRunner.validateInvalidBPAlert(TestRunner.java:387)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidBPAlert -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.vitalGuard.tests.TestRunner@651aed93]" started-at="2025-07-06T18:36:41 IST" name="tearDown" finished-at="2025-07-06T18:36:45 IST" duration-ms="3883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.vitalGuard.tests.TestRunner -->
    </test> <!-- EdgeTest -->
  </suite> <!-- VitalGuardAutomationSuite -->
</testng-results>
